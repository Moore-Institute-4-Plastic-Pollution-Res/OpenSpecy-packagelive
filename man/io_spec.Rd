% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_spec.R
\name{write_spec}
\alias{write_spec}
\alias{write_spec.default}
\alias{write_spec.OpenSpecy}
\alias{read_spec}
\alias{as_hyperSpec}
\title{Read and write spectral data}
\usage{
write_spec(x, ...)

\method{write_spec}{default}(x, ...)

\method{write_spec}{OpenSpecy}(x, file, method = NULL, digits = getOption("digits"), ...)

read_spec(file, share = NULL, method = NULL, ...)

as_hyperSpec(x)
}
\arguments{
\item{x}{An object of class \code{\link{OpenSpecy}}.}

\item{file}{For `read_spec()`, file path to be read from. For `write_spec()`, file path to be written to. If writing, files will be written as the type designated in the file name.}

\item{method}{Optional. A function to be used as a custom reader or writer. Defaults to the appropriate function based on the file extension.}

\item{digits}{number of significant digits to use when formatting numeric
values; defaults to \code{\link[base]{getOption}("digits")}.}

\item{share}{defaults to \code{NULL}; needed to share spectra with the
Open Specy community; see \code{\link{share_spec}()} for details.}

\item{\ldots}{further arguments passed to the submethods.}
}
\value{
\code{read_spec()} reads data formatted as an \code{OpenSpecy} object and returns a list object of class \code{\link{OpenSpecy}} containing spectral data. \cr
\code{write_spec()} writes a file for an object of class \code{\link{OpenSpecy}} containing spectral data. \cr
\code{as_hyperspec()} converts an \code{OpenSpecy} object to a hyperSpec object.
}
\description{
Functions for reading and writing spectral data to and from OpenSpecy format.
\code{OpenSpecy} objects are lists with components `wavenumber`, `spectra`, and `metadata`.
Currently supported formats are .yaml, .json, or .rds.
}
\details{
Due to floating point number errors there may be some differences in the precision
of the numbers returned if using multiple devices for json and yaml files
but the numbers should be nearly identical. readRDS should return the exact same object every time.
}
\examples{
read_spec(read_extdata("raman_hdpe.yml"))
read_spec(read_extdata("raman_hdpe.json"))
read_spec(read_extdata("raman_hdpe.rds"))

\dontrun{
data(raman_hdpe)
# Specify the file type you want to write to using the extension at the end of the file name.
write_spec(raman_hdpe, "raman_hdpe.yml")
write_spec(raman_hdpe, "raman_hdpe.json")
write_spec(raman_hdpe, "raman_hdpe.rds")

# Convert an \code{OpenSpecy} object to a hyperSpec object
hyper <- as_hyperSpec(raman_hdpe)
}

}
\seealso{
\code{\link{OpenSpecy}()}
\code{\link[base]{saveRDS}()}; \code{\link[base]{readRDS}()};
\code{\link[yaml]{write_yaml}()}; \code{\link[yaml]{read_yaml}()};
\code{\link[jsonlite]{write_json}()}; \code{\link[jsonlite]{read_json}()};
}
\author{
Zacharias Steinmetz, Win Cowger
}
