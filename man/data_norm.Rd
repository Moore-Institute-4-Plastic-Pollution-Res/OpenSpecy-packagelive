% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_norm.R, R/flatten_range.R,
%   R/restric_range.R
\name{adj_res}
\alias{adj_res}
\alias{conform_res}
\alias{adj_neg}
\alias{make_rel}
\alias{flatten_range}
\alias{restrict_range}
\title{Normalization and conversion of spectral data}
\usage{
adj_res(x, res = 1, fun = round)

conform_res(x, res = 5)

adj_neg(y, na.rm = FALSE)

make_rel(y, na.rm = FALSE)

flatten_range(x, ...)

restrict_range(x, ...)
}
\arguments{
\item{x}{a numeric vector or an \R object which is coercible to one by
\code{as.vector(x, "numeric")}; \code{x} should contain the spectral
wavenumbers.}

\item{res}{spectral resolution supplied to \code{fun}.}

\item{fun}{the function to be applied to each element of \code{x}; defaults
to \code{\link[base]{round}()} to round to a specific resolution \code{res}.}

\item{y}{a numeric vector containing the spectral intensities.}

\item{na.rm}{logical. Should missing values be removed?}

\item{object}{An OpenSpecy object containing spectral wavenumbers and intensities.}

\item{min_range}{A vector of minimum values for the range to be flattened.}

\item{max_range}{A vector of maximum values for the range to be flattened.}

\item{make_rel}{Logical. Should the output intensities be normalized to the range [0, 1] using make_rel() function?}
}
\value{
\code{adj_res()} and \code{conform_res()} return a numeric vector with
resolution-conformed wavenumbers.
\code{adj_neg()} and \code{make_rel()} return numeric vectors
with the normalized intensity data.

An OpenSpecy object with the spectral intensities within specified ranges flattened.

\code{adj_res()} abd \code{conform_res()} return a numeric vector with
resolution-conformed wavenumbers.
\code{adj_neg()} and \code{make_rel()} return numeric vectors
with the normalized intensity data.
}
\description{
\code{adj_res()} and \code{conform_res()} are helper functions to conform
wavenumbers to different spectral resolutions.
\code{adj_neg()} converts numeric intensities \code{y} < 1 into values
>= 1, keeping absolute differences between intensity values by shifting each
value by the minimum intensity.
\code{make_rel()} converts intensities \code{y} into relative values between
0 and 1 using the standard normalization equation.
If \code{na.rm} is \code{TRUE}, missing values are removed before the
computation proceeds.

\code{flatten_range()} will flatten ranges of the spectra that should have no peaks. 
Multiple ranges can be specified by inputting the series of max and min values in order.

\code{restrict_range()} restricts wavenumber ranges to user specified values. 
Multiple ranges can be specified by inputting the series of max and min values in order.
}
\details{
\code{adj_res()} and \code{conform_res()} are used in Open Specy to
faciliate comparisons of spectra with different resolutions.
\code{adj_neg()} is used to avoid errors that could arise from log
transforming spectra when using \code{\link{adj_intens}()} and other
functions.
\code{make_rel()} is used to retain the relative height proportions between
spectra while avoiding the large numbers that can result from some spectral
instruments.
}
\examples{
adj_res(seq(500, 4000, 4), 5)
conform_res(seq(500, 4000, 4))
adj_neg(c(-1000, -1, 0, 1, 10))
make_rel(c(-1000, -1, 0, 1, 10))

library(ggplot2)
library(data.table)
library(OpenSpecy)
test_noise = as_OpenSpecy(x = seq(400,4000, by = 10), spectra = data.table(intensity = rnorm(361)))
  flattened_intensites <- flatten_range(test_noise, min_range = c(1000, 2000) , max_range = c(1500, 2500))
 ggplot()+
   geom_line(aes(x = test_noise$wavenumber, y = flattened_intensites))
flattened_intensites <- flatten_range.OpenSpecy(object = test_noise, min_range = c(1000, 2000) , max_range = c(1500, 2500))
ggplot()+
   geom_line(aes(x = flattened_intensites$wavenumber, y = flattened_intensites$spectra[[1]]))
test_noise = as_OpenSpecy(wavenumber = seq(400,4000, by = 10), spectra = data.table(intensity = rnorm(361)))
restrict_range(test_noise, min_range = 1000, max_range = 2000)
restrict_range(test_noise, min_range = c(1000, 2000) , max_range = c(1500, 2500))

}
\seealso{
\code{\link[base]{min}()} and \code{\link[base]{round}()};
\code{\link{adj_intens}()} for log transformation functions

\code{\link[base]{min}()} and \code{\link[base]{round}()};
\code{\link{adj_intens}()} for log transformation functions

\code{\link[base]{min}()} and \code{\link[base]{round}()};
\code{\link{adj_intens}()} for log transformation functions
}
\author{
Win Cowger, Zacharias Steinmetz
}
