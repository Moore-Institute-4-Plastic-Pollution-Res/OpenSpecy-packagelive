% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_spectrum.R
\name{match_spectrum}
\alias{match_spectrum}
\alias{match_spectrum.formula}
\alias{match_spectrum.data.frame}
\alias{match_spectrum.default}
\title{Match spectra with reference library}
\usage{
match_spectrum(x, ...)

\method{match_spectrum}{formula}(formula, data = NULL, ...)

\method{match_spectrum}{data.frame}(x, ...)

\method{match_spectrum}{default}(
  x,
  y,
  library,
  which = NULL,
  type = "full",
  range = seq(0, 6000, 0.1),
  top_n = 100,
  ...
)
}
\arguments{
\item{x}{a numeric vector containing the spectral wavenumbers; alternatively
a data frame containing spectral data as \code{"wavenumber"} and
\code{"intensity"} can be supplied.}

\item{formula}{an object of class '\code{\link[stats]{formula}}' of the form
\code{intensity ~ wavenumber}.}

\item{data}{a data frame containing the variables in \code{formula}.}

\item{y}{a numeric vector containing the spectral intensities.}

\item{library}{reference library you want to compare against.}

\item{which}{a character string specifying whether \code{"raman"} or
\code{"ftir"} spectra should be matched.}

\item{type}{a character string specifying whether the \code{"full"} spectrum
should be matched or spectrum \code{"peaks"} only.}

\item{range}{this should be all possible wavenumber values from your spectral
library.}

\item{top_n}{number of top matches that you want to be returned.}

\item{\ldots}{further arguments passed to the submethods.}
}
\description{
This function will compare a spectrum to a spectral library formatted with
the Open Specy standard and report the best match using the Pearson
correlation coefficient.
}
\details{
This routine will match the spectrum you want to identify to the
wavenumbers present in the spectral library. Once the spectra are aligned, it
computes the Pearson correlation coefficient between the spectrum you want to
identify and all spectra in the library (see \code{\link[stats]{cor}}).
The function returns a table with the Pearson correlation coefficient values
and all metadata for the top spectral matches.
If using the Open Specy library, all intensity values are in absorbance, so
your spectra should also be in absorbance units. If you need to convert your
spectrum, use \code{\link{adjust_intensity}()}.
}
\examples{
\dontrun{
data("raman_hdpe")

get_lib("raman")
spec_lib <- load_lib("raman")

match_spectrum(raman_hdpe, spec_lib, "raman", "full")
}

}
\seealso{
\code{\link{adjust_intensity}()} converts spectra;
\code{\link{get_lib}()} retrieves the Open Specy reference library;
\code{\link{load_lib}()} loads the Open Specy reference library into an \R
object of choice
}
