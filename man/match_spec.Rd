% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_spec.R
\name{correlate_spectra}
\alias{correlate_spectra}
\title{Identify and filter spectra}
\usage{
correlate_spectra(object, ...)
}
\arguments{
\item{object}{An OpenSpecy object, typically with unknowns.}

\item{library}{An OpenSpecy object representing the library of spectra to correlate with.}

\item{na.rm}{Logical value indicating whether missing values should be removed when calculating correlations. Default is \code{TRUE}.}

\item{top_n}{Integer value specifying the number of top matches to return. If NULL (default), all matches will be returned.}

\item{cor_matrix}{A correlation matrix for object and library, can be returned by \code{correlate_spectra()}}

\item{add_library_metadata}{Name of the column in the library metadata containing the column names or NULL if you don't want to join.}

\item{add_object_metadata}{Name of the column in the object metadata containing the column names or NULL if you don't want to join.}

\item{remove_empty}{Whether to remove empty columns in the metadata where there are no values.}

\item{logic}{a logical or numeric vector describing which spectra to keep (TRUE).}

\item{\ldots}{Additional arguments passed to the \code{cor()} function for correlation calculation.}
}
\value{
A data table containing correlations between spectra and the library.
The table has three columns: \code{object_id}, \code{library_id}, and \code{match_val}.
Each row represents a unique pairwise correlation between a spectrum in the object and a spectrum in the library.
If \code{top_n} is specified, only the top \code{top_n} matches for each object spectrum will be returned.
If \code{add_library_metadata} is \code{is.character}, the library metadata will be added to the output.
If \code{add_object_metadata} is \code{is.character}, the object metadata will be added to the output.
}
\description{
This function correlates two OpenSpecy objects, typically one with knowns and one with unknowns.
}
\examples{
data("test_lib")
unknown <- read_any(read_extdata("ftir_ldpe_soil.asp")) |>
  conform_spec(new_wavenumbers = test_lib$wavenumber, res = spec_res(test_lib)) |>
  process_spectra()
matches <- correlate_spectra(unknown, test_lib)

test_lib_extract <- filter_spec(
  test_lib,
  logic = test_lib$metadata$polymer_class == "polycarbonates"
)

matches2 <- correlate_spectra(object = unknown, library = test_lib_extract)

}
\seealso{
\code{\link{adj_intens}()} converts spectra;
\code{\link{get_lib}()} retrieves the Open Specy reference library;
\code{\link{load_lib}()} loads the Open Specy reference library into an \R
object of choice
}
\author{
Win Cowger, Zacharias Steinmetz
}
