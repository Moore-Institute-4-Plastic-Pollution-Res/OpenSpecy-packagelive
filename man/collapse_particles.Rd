% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse_particles.R
\name{collapse_particles}
\alias{collapse_particles}
\title{Collapse Particles}
\usage{
collapse_particles(object, particle_filter = NULL)
}
\arguments{
\item{object}{a list object of class \code{OpenSpecy}.}

\item{type}{a character string specifying whether the input spectrum is
in absorbance units (\code{"none"}, default) or needs additional conversion
from \code{"reflectance"} or \code{"transmittance"} data.}

\item{make_rel}{logical; if \code{TRUE} spectra are automatically normalized
with \code{\link{make_rel}()}.}

\item{\ldots}{further arguments passed to submethods; this is
to \code{\link{adj_neg}()} for \code{adj_intens()} and
to \code{\link{conform_res}()} for \code{conform_intens()}.}
}
\value{
\code{adj_intens()} returns a data frame containing two columns
named \code{"wavenumber"} and \code{"intensity"}.
}
\description{
Converts spectral map oriented OpenSpecy object to particle centroids based on metadata values.
}
\examples{
data("raman_hdpe")

adj_intens(raman_hdpe)

test_noise = as_OpenSpecy(x = seq(400,4000, by = 10), spectra = data.table(intensity = rnorm(361)))
test_noise = process_spectra(test_noise, range_decision = T, min_range = 1000, max_range = 3000, carbon_dioxide_decision = T, abs = F)
ggplot() +
geom_line(aes(x = test_noise$wavenumber, y = test_noise$spectra[[1]]))
}
\seealso{
\code{\link{subtr_bg}()} for spectral background correction;
\code{\link{match_spec}()} matches spectra with the Open Specy or other
reference libraries
}
\author{
Win Cowger, Zacharias Steinmetz
}
